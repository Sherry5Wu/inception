services:
  mariadb:
    build: requirements/mariadb/.
    image: mariadb:inception
    container_name: mariadb
    volumes:
      - db_data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - inception
    restart: always

  # Defines the nginx service. This name is how other services can reference it internally.
  nginx:
    build: requirements/nginx/.
    # Names the resulting image as nginx. This is the local tag
    image: nginx:inception
    # Gives the container a custom name (nginx) instead of a generated one.
    # This makes it easier to refer to with Docker CLI commands.
    container_name: nginx
    # Maps port 443 on your host machine (left) to port 443 inside the container (right).
    # Port 443 is used for HTTPS.
    ports:
      - "443:443"
    # Tells Docker to start the wordpress service before starting nginx. However,
    # it doesn’t wait until WordPress is ready, just that it has started.
    depends_on:
      - wordpress
      - mariadb
    # Mounts the named volume wp_data to /var/www/html inside the container
    volumes:
      - wp_data:/var/www/html
    env_file:
      - .env
    networks:
      - inception
    restart: always

  wordpress:
    build: requirements/wordpress/.
    image: wordpress:inception
    depends_on:
      - mariadb
    container_name: wordpress
    volumes:
      - wp_data:/var/www/html
    env_file:
      - .env
    networks:
      - inception
    restart: always

  adminer:
    build: requirements/bonus/adminer/.
    image: adminer:inception
    container_name: adminer
    ports:
      - "8081:8080"
    networks:
      - inception
    restart: always

  redis:
    build: requirements/bonus/redis/.
    image: redis:inception
    container_name: redis
    networks:
      - inception
    ports:
    - "6379:6379"                   # Optional: remove if you want Redis internal only
    volumes:
    - redis_data:/data
    environment:
    - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "/etc/redis.conf", "--protected-mode", "no", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: always

  pure-ftpd:
    build: requirements/bonus/pure-ftpd/.
    image: pure-ftpd:inception
    container_name: pure-ftpd
    depends_on:
      - wordpress
    ports:
      - "21:21"
      - "30000-30042:30000-30042"
    volumes:
      - wp_data:/home/ftpuser
    env_file:
      - .env
    networks:
      - inception
    healthcheck:
      test: ["CMD", "pgrep", "pure-ftpd"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always

# "driver:":defines how Docker manages the volume — i.e., which backend or plugin
# to use to create and mount the volume.
  # "driver: local": is Docker’s default volume driver.It stores data on the local
  # host's filesystem.
volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      # "Bind" tells Docker this is a bind mount — i.e., map a host folder.
      o: bind
      # The absolute path on the host machine to use as the actual volume storage.
      device: /home/jingwu/data/db_data

  wp_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/jingwu/data/wp_data

  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/jingwu/data/redis_data


networks:
  inception:
    # bridge is the default network driver on Docker for Linux.
  # It creates a private internal network on the host machine where containers
  # can communicate with each other.
    driver: bridge






  # static-website:
  #   build: requirements/bonus/static-website/.
  #   image: static-website:inception
  #   container_name: static-website
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - inception
  #   restart: always

  # netdata:
  #   build: requirements/bonus/netdata/.
  #   image: netdata:inception
  #   container_name: netdata
  #   ports:
  #     - "8082:19999"
  #   networks:
  #     - inception
  #   restart: always
